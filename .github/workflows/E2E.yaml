name: End to end tests

on:
  workflow_dispatch:

defaults:
  run:
    shell: PowerShell

jobs:
  Check:
    runs-on: [ windows-latest ]
    steps:
      - name: Check secrets
        run: |
          $err = $false
          if ('${{ Secrets.OrgPAT }}' -eq '') {
            Write-Host "::Error::In order to run end to end tests, you need a Secret called OrgPAT containing a valid Personal Access Token"
            $err = $true
          }
          if ('${{ Secrets.githubOwner }}' -eq '') {
            Write-Host "::Error::In order to run end to end tests, you need a Secret called githubOwner containing a the name of the owner of temp repositories"
            $err = $true
          }
          if ('${{ Secrets.adminCenterApiCredentials }}' -eq '') {
            Write-Host "::Error::In order to run end to end tests, you need a Secret called adminCenterApiCredentials containing API access credentials for BC Admin Center"
            $err = $true
          }
          if ('${{ Secrets.licenseFileUrl }}' -eq '') {
            Write-Host "::Error::In order to run end to end tests, you need a Secret called licenseFileUrl containing a secure Url to a build license file"
            $err = $true
          }
          if ($err) {
            exit 1
          }

  SetupRepositories:
    runs-on: [ windows-latest ]
    needs: [ Check ]
    outputs:
      actionsRepo: ${{ steps.setup.outputs.actionsRepo }}
      perTenantExtensionRepo: ${{ steps.setup.outputs.perTenantExtensionRepo }}
      appSourceAppRepo: ${{ steps.setup.outputs.appSourceAppRepo }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Repositories
        id: setup
        run: e2eTests\SetupRepositories.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}'
  
  CalculateReleases:
    runs-on: [ windows-latest ]
    needs: [ Check ]
    outputs:
      releases: ${{ steps.calculatereleases.outputs.releases }}
    steps:
      - uses: actions/checkout@v2

      - name: CalculateReleases
        id: calculateReleases
        run: |
          $modulePath = (Get-Item ".\e2eTests\e2eTestHelper.psm1").FullName
          Import-Module $modulePath -DisableNameChecking
          SetTokenAndRepository -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -repository "$ENV:GITHUB_REPOSITORY" -github
          $releases = @(gh release list --repo $ENV:GITHUB_REPOSITORY | ForEach-Object { $_.split("`t")[0] })
          Write-Host "Releases: $($releases -join ', ')"
          if ($releases.Count -eq 1) {
            $releasesJSon = "[$($releases | ConvertTo-Json -compress)]"
          }
          else {
            $releasesJSon = $releases | ConvertTo-Json -compress
          }
          Write-Host "::set-output name=releases::$releasesJson"
          Write-Host "::set-output name=releasesCount::$($releases.Count)"
          Write-Host "set-output name=releases::$releasesJson"
          Write-Host "set-output name=releasesCount::$($releases.Count)"

  TestAlGoPtePrivate:
    runs-on: [ windows-latest ]
    needs: [ SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.perTenantExtensionRepo }}' -adminCenterApiCredentials '${{ Secrets.adminCenterApiCredentials }}' -private

  TestAlGoAppSourcePrivate:
    runs-on: [ windows-latest ]
    needs: [SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.appSourceAppRepo }}' -adminCenterApiCredentials '' -licenseFileUrl '${{ Secrets.LicenseFileUrl }}' -appSourceApp -private

  TestAlGoPte:
    runs-on: [ windows-latest ]
    needs: [ SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.perTenantExtensionRepo }}' -adminCenterApiCredentials '${{ Secrets.adminCenterApiCredentials }}'

  TestAlGoPteMultiProject:
    runs-on: [ windows-latest ]
    needs: [ SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.perTenantExtensionRepo }}' -multiProject

  TestAlGoAppSource:
    runs-on: [ windows-latest ]
    needs: [SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.appSourceAppRepo }}' -adminCenterApiCredentials '' -licenseFileUrl '${{ Secrets.LicenseFileUrl }}' -appSourceApp

  TestAlGoAppSourceMultiProject:
    runs-on: [ windows-latest ]
    needs: [ SetupRepositories ]
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -InsiderSasToken '${{ Secrets.InsiderSasToken }}' -template '${{ needs.SetupRepositories.outputs.appSourceAppRepo }}' -adminCenterApiCredentials '' -licenseFileUrl '${{ Secrets.LicenseFileUrl }}' -multiProject -appSourceApp

  TestAlGoPteUpgrade:
    runs-on: [ windows-latest ]
    needs: [SetupRepositories, CalculateReleases ]
    strategy:
      matrix:
        release: ${{ fromJson(needs.CalculateReleases.outputs.releases) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go-Upgrade.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -template '${{ needs.SetupRepositories.outputs.perTenantExtensionRepo }}' -release '${{ matrix.release }}' -path 'pte'

  TestAlGoAppSourceUpgrade:
    runs-on: [ windows-latest ]
    needs: [SetupRepositories, CalculateReleases ]
    strategy:
      matrix:
        release: ${{ fromJson(needs.CalculateReleases.outputs.releases) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: e2eTests\Test-AL-Go-Upgrade.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -template '${{ needs.SetupRepositories.outputs.appSourceAppRepo }}' -release '${{ matrix.release }}' -licenseFileUrl '${{ Secrets.LicenseFileUrl }}' -path 'appsourceapp' -appSourceApp

  RemoveRepositories:
    runs-on: [ windows-latest ]
    needs: [ SetupRepositories, TestAlGoPtePrivate, TestAlGoAppSourcePrivate, TestAlGoPte, TestAlGoPteMultiProject, TestAlGoAppSource, TestAlGoAppSourceMultiProject, TestAlGoPteUpgrade, TestAlGoAppSourceUpgrade ]
    if: always() && (${{ needs.SetupRepositories.result == 'Success' }})
    steps:
      - uses: actions/checkout@v2

      - name: Remove Repositories
        run: e2eTests\RemoveRepositories.ps1 -github -githubOwner '${{ Secrets.githubOwner }}' -token '${{ Secrets.OrgPAT }}' -actionsRepo '${{ needs.SetupRepositories.outputs.actionsRepo }}' -perTenantExtensionRepo '${{ needs.SetupRepositories.outputs.perTenantExtensionRepo }}' -appSourceAppRepo '${{ needs.SetupRepositories.outputs.appSourceAppRepo }}'
